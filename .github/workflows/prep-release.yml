name: Prepare Release
# This workflow is manually dispatched. It:
# - bumps the version as specified in the input
# - prepares build artifacts
# - creates a release branch
# - commits the changes
# - creates a pull request to the main branch
# - TODO: consider skipping the PR, push to main, and create a release automatically

on:
  workflow_dispatch:
    inputs:
      level:
        description: The level of release to be used.
        type: choice
        options:
          - patch
          - minor
          - major
        default: 'patch'
        required: true

jobs:
  prep-release:
    runs-on: ubuntu-latest
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the changed files back to the repository.
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.head_ref }}

      - name: Setup PHP
        uses: shivammathur/setup-php@cf4cade2721270509d5b1c766ab3549210a39a2a # v2.33.0
        with:
          php-version: '8.1'
          coverage: none
          tools: composer, cs2pr

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer vendor directory
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Show versions
        run: |
          php --version
          composer --version
          node --version
          npm --version

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install Packages
        run: npm install

      - name: Run Update Version Script
        id: version_bump
        run: |
          OUTPUT=$(npm run set-version-${{ inputs.level }})
          echo "Output: $OUTPUT"
          echo "new_version=$(echo "$OUTPUT" | jq -r '.newVersion')" >> $GITHUB_OUTPUT
          echo "old_version=$(echo "$OUTPUT" | jq -r '.oldVersion')" >> $GITHUB_OUTPUT
          echo "message=$(echo "$OUTPUT" | jq -r '.message')" >> $GITHUB_OUTPUT

      - name: Commit code changes to release branch
        uses: stefanzweifel/git-auto-commit-action@b863ae1933cb653a53c021fe36dbb774e1fb9403 # v5.2.0
        with:
          commit_message: "ðŸ¤– prep release"
          branch: release
          create_branch: true
        env:
          GITHUB_TOKEN: "${{ github.token }}"

      - name: Create Release Pull Request
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        with:
          token: ${{ github.token }}
          branch: release
          title: "Automated ${{ inputs.level }} Release PR"
          body: "This PR was created automatically by a GitHub Action."
