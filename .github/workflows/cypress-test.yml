name: Cypress Test Matrix

on:
  push:
    branches:
      - trunk
      - automation/test-building-bluehost-plugin
    paths-ignore:
      - '.github/**'
      - '.gitignore'
      - '**.md'
  pull_request:
    types: [opened, edited, synchronize, reopened, ready_for_review]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Plugin Zip
    runs-on: ubuntu-latest
    timeout-minutes: 40

    strategy:
      fail-fast: false
      matrix:
        phpVersion:
          - '8.1'
        wpVersion:
          - '6.2'

    steps:
      # - name: Setup PHP
      #   uses: shivammathur/setup-php@v2
      #   with:
      #     php-version: '8.1'
      #     coverage: none
      #     tools: composer, cs2pr
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout plugin
        uses: actions/checkout@v3

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'npm'

      - name: Checkout module
        uses: actions/checkout@v3
        with:
          path: ./modules/${{ github.repository }}

      # - name: Get Composer cache directory
      #   id: composer-cache
      #   run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      # - name: Cache Composer vendor directory
      #   uses: actions/cache@v3
      #   with:
      #     path: ${{ steps.composer-cache.outputs.dir }}
      #     key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-composer-

      - name: Show versions
        run: |
          node --version
          npm --version

      # - name: Modify composer.json
      #   run: |
      #     node ./modules/newfold-labs/wp-module-ecommerce/scripts/update-plugin-composer.mjs ${PWD}/composer.json ${PWD}/modules

      # - name: Update lockfile
      #   run: composer update

      # - name: Validate composer.json and composer.lock
      #   run: |
      #   composer config github-oauth.github.com ${{ secrets.composer-update-token }}
      #   composer validate

      # - name: Install PHP Dependencies
      #   run: composer install --no-progress --no-dev --optimize-autoloader --prefer-dist

      - name: NPM Install
        run: npm ci --legacy-peer-deps

      - name: Setup module
        working-directory: ./modules/${{ github.repository }}
        run: npm ci --legacy-peer-deps

      - name: NPM Install module
        run: npm install ./modules/newfold-labs/wp-module-ecommerce --legacy-peer-deps --force

      - name: View modified files
        run: cat package.json composer.json

      - name: Build JavaScript
        run: npm run build

      - name: Setup workflow context
        id: workflow
        working-directory: ${{ runner.temp }}
        env:
          REPO: 'bluehost-wordpress-plugin'
        run: |
          mkdir dist
          echo "DIST=${PWD}/dist" >> $GITHUB_OUTPUT
          echo "PACKAGE=${REPO##*/}" >> $GITHUB_OUTPUT

      - name: Prepare files
        run: rsync -r --exclude-from=.distignore . ${{ steps.workflow.outputs.DIST }}

      # - name: Validate composer.json and composer.lock
      #   run: |
      #   composer config github-oauth.github.com ${{ secrets.composer-update-token }}
      #   composer validate

      # - name: Install PHP Dependencies
      #   run: composer install --no-progress --no-dev --optimize-autoloader --prefer-dist

      - name: NPM Install
        run: npm install --legacy-peer-deps

      # - name: Build JavaScript
      #   run: npm run build

      - name: Create Distribution Copy
        run: rsync -r --exclude-from=.distignore . ${{ steps.workflow.outputs.DIST }}/${{ steps.workflow.outputs.PACKAGE }}

      - name: Download Bluehost Plugin
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: bluehost-plugin.yml
          workflow_conclusion: success
          name: bluehost-wordpress-plugin
          path: ${{ steps.workflow.outputs.DIST }}/${{ steps.workflow.outputs.PACKAGE }}

      - name: List Distribution Files
        working-directory: ${{ steps.workflow.outputs.DIST }}
        run: find .

      - name: Print Dist
        run: |
          ls ${{ steps.workflow.outputs.DIST }}/${{ steps.workflow.outputs.PACKAGE }}

      - name: Configure WordPress
        run: |
          echo '{"core": "WordPress/WordPress#tags/${{ matrix.wpVersion }}","phpVersion": "${{ matrix.phpVersion }}","plugins": [ "${{ steps.workflow.outputs.DIST }}/${{ steps.workflow.outputs.PACKAGE }}","https://downloads.wordpress.org/plugin/woocommerce.latest-stable.zip" ] }' > .wp-env.override.json

      # - name: Configure Cypress
      #   run: |
      #     echo '{"wpVersion": "${{ matrix.wpVersion }}","phpVersion": "${{ matrix.phpVersion }}"}' > cypress.env.json

      - name: Install WordPress
        run: npx wp-env start --debug

      - name: list of installed plugin
        run: |
          npx wp-env run cli wp plugin list
          npx wp-env run cli wp plugin activate --all

      - name: Run Cypress Tests
        run: npx cypress run

      # - name: Run Cypress Tests
      #   env:
      #     RECORD_REPLAY_API_KEY: ${{ secrets.RECORD_REPLAY_API_KEY }}
      #   if: ${{ github.repository != 'bluehost/bluehost-wordpress-plugin' || env.RECORD_REPLAY_API_KEY == '' }}
      #   run: npx cypress run

      # - name: Run Cypress Tests
      #   uses: replayio/action-cypress@v0.2.8
      #   env:
      #     RECORD_REPLAY_METADATA_TEST_RUN_TITLE: 'php-${{ matrix.phpVersion }}, wp-${{ matrix.wpVersion }}'
      #     RECORD_REPLAY_API_KEY: ${{ secrets.RECORD_REPLAY_API_KEY }}
      #   if: ${{ github.repository == 'bluehost/bluehost-wordpress-plugin' && env.RECORD_REPLAY_API_KEY != '' }}
      #   with:
      #     api-key: ${{ secrets.RECORD_REPLAY_API_KEY }}
      #     browser: 'Replay Chromium'
      #     command: npm run test:e2e -- --record --key ${{ secrets.CYPRESS_RECORD_KEY }} --tag php-${{ matrix.phpVersion }},wp-${{ matrix.wpVersion }}
      #     upload-all: false

      - name: List Replays
        if: always()
        shell: bash
        run: npx @replayio/replay ls --json

      - name: Store screenshots of test failures
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: screenshots
          path: ./tests/cypress/screenshots

      - name: Output debug.log file contents
        if: ${{ always() }}
        continue-on-error: true
        run: npx wp-env run wordpress "cat /var/www/html/wp-content/debug.log"
